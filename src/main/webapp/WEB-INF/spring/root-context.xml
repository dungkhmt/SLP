<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc 
								http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
								http://www.springframework.org/schema/beans 
								http://www.springframework.org/schema/beans/spring-beans.xsd
								http://www.springframework.org/schema/tx 
                				http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
								http://www.springframework.org/schema/context 
								http://www.springframework.org/schema/context/spring-context-3.2.xsd" 
             xmlns:util="http://www.springframework.org/schema/util">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/assets/**" location="/assets/" />
    
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
    <context:component-scan base-package="com.kse.slp" />
    
    <!-- JDBC Data Source. It is assumed you have MySQL running on localhost port 3306 with 
    username root and blank password. Change below if it's not the case -->
    
    <beans:bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
               
        <beans:property name="url" value="jdbc:mysql://localhost:3306/slp?useEncoding=true&amp;characterEncoding=UTF-8"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value=""/>        
        <beans:property name="testOnBorrow" value="1"/>        
        <beans:property name="validationQuery" value="SELECT 1"/>
    </beans:bean>
    
    
    <!-- Hibernate Session Factory -->
    <beans:bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="myDataSource"/>
                
        <beans:property name="packagesToScan">
            <beans:array>
                <beans:value>com.kse.slp</beans:value>
            </beans:array>
        </beans:property>
        
        <beans:property name="hibernateProperties">            
            <beans:value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.show_sql=false
                hibernate.max_fetch_depth=1
                hibernate.use_sql_comments=false
                hibernate.order_updates=true
                hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
            </beans:value>
        </beans:property>         
    </beans:bean>

    <!-- Enable Annotation based Declarative Transaction Management -->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
    
    <!-- Hibernate Transaction Manager -->
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="mySessionFactory"/>
    </beans:bean>
    
	<!-- Tiles 3 -->
	<beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"  p:order="0"/>  
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <beans:property name="definitions" value="/WEB-INF/views/tiles.xml" />  
    </beans:bean>
    <!-- MultiPart File -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes = 20*1024*1024*1024 B = 20 MB -->
        <beans:property name="maxUploadSize" value="20971520"/>
    </beans:bean>
</beans:beans>
